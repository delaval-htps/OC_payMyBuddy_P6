server.port=8082
spring.application.name=payMyBuddy

# configuration for logging
logging.level.root=info
logging.level.com.paymybuddy=debug
logging.level.org.hibernate.SQL=trace
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.boot.web.embedded.tomcat=INFO

#configuration ansi console
spring.output.ansi.enabled=always

#configuration datasource
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.datasource.url=jdbc:h2:mem:testdb;DATABASE_TO_UPPER=false;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true


# DDL generation : in  this cas create at begining and drop table at exit of application
spring.jpa.hibernate.ddl-auto=create


#to show query in sql
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# spring.datasource.initialization.mode 	
spring.sql.init.mode=always
spring.sql.init.platform=test
spring.jpa.defer-datasource-initialization=true

# spring credentials oauth2 for github
spring.security.oauth2.client.registration.github.client-id=b7e0f170aea60f997e04
spring.security.oauth2.client.registration.github.client-secret=6873c569f190d47d2475186dd7d0a479592ace3b
spring.security.oauth2.client.registration.github.scope= read:user,user:email
# spring credentials oauth2 for google
spring.security.oauth2.client.registration.google.client-id=66103428966-c7pjkua3n58a9m6p5hdhrtkroc1l4dg6.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope= profile,email
# spring credentials oauth2 for facebook
spring.security.oauth2.client.registration.facebook.client-id=1003173603569133
spring.security.oauth2.client.registration.facebook.client-secret=523267b425e55a5a7164d05dfa0e378d
spring.security.oauth2.client.registration.facebook.scope= email,public_profile

